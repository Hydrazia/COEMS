local players = game:GetService("Players")
local plr = players.LocalPlayer
local char = plr.Character or plr.CharacterAdded:Wait()

if not getgenv().BypassedAntiCheat then
   getgenv().BypassedAntiCheat = true
   do
       
       local oldIndex
       oldIndex = hookmetamethod(game, "__index", newcclosure(function(self, property)
           if not checkcaller() then
               
               if
                  rawequal(oldIndex(self, "ClassName"), "Humanoid") -- i wont return on a non Humanoid
                  and rawequal(oldIndex(self, "Parent"), plr.Character) -- Parent
               then
                   if rawequal(property, "WalkSpeed") then
                       return 16
                   elseif rawequal(property, "JumpPower") then
                       return 30
                   elseif rawequal(property, "JumpHeight") then
                       return 3
                   elseif rawequal(property, "PlatformStand") then -- in case
                       return false
                   end
               end
           end
           return oldIndex(self, property)
       end))
       
       local hookNamecall
       hookNamecall = hookmetamethod(game, "__namecall", newcclosure(function(...)
        if not checkcaller() then
               local func = getnamecallmethod()
               local stuffs = {...}
               local the1 = stuffs[1]
               local the2 = stuffs[2]
               if oldIndex(plr, "Character") then
                   if
                       rawequal(func, "SetPrimaryPartCFrame")
                       and rawequal(typeof({...}), "table")
                       and not rawequal(the1, nil)
                       and not rawequal(the2, nil)
                       and rawequal(typeof(the1), "Instance")
                       and rawequal(typeof(the2), "CFrame")
                       and rawequal(the1, oldIndex(plr, "Character"))
                       and rawequal(the1.Name, oldIndex(plr, "Name"))
                   then
                       return CFrame.new(0,0,0)
                   end
        end
               if
                   rawequal(func, "FindPartOnRayWithWhitelist")
               then
                   return wait(9e9)
               end
           end
           return hookNamecall(...)
       end))
      

       local bp = {
           getconnections(game:GetService("ScriptContext").Error), -- Script Error
           getconnections(char.DescendantAdded), -- PRIMARY
       }
       local function bpc()
           for _, v in pairs(bp) do
               for _,v in pairs(v) do
                   v:Disable()
               end
           end
       end
       plr.CharacterAdded:Connect(bpc)
       bpc() -- load it
   end
end
